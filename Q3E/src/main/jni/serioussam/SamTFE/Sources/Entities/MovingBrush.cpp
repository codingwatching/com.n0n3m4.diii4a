/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 17 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"

#include "Entities/StdH/StdH.h"

#include <Entities/MovingBrush.h>
#include <Entities/MovingBrush_tables.h>
CEntityEvent *EHit::MakeCopy(void) { CEntityEvent *peeCopy = new EHit(*this); return peeCopy;}
EHit::EHit() : CEntityEvent(EVENTCODE_EHit) {;
};
CEntityEvent *EBrushDestroyed::MakeCopy(void) { CEntityEvent *peeCopy = new EBrushDestroyed(*this); return peeCopy;}
EBrushDestroyed::EBrushDestroyed() : CEntityEvent(EVENTCODE_EBrushDestroyed) {;
};
#line 43 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"

static const float TRANSLATION_EPSILON=0.05f;
static const float ROTATION_EPSILON=0.05f;
extern void GetDefaultForce(INDEX iForce, const FLOAT3D &vPoint, 
    CForceStrength &fsGravity, CForceStrength &fsField);

void CMovingBrush::SetDefaultProperties(void) {
  m_strName = "Moving Brush";
  m_strDescription = "";
  m_penTarget = NULL;
  m_bAutoStart = FALSE ;
  m_fSpeed = 1.0f;
  m_fWaitTime = 0.0f;
  m_bMoveOnTouch = FALSE ;
  m_ebaAction = BA_NONE ;
  m_fBlockDamage = 10.0f;
  m_bPlayersOnly = TRUE ;
  m_bDynamicShadows = FALSE ;
  m_bVeryBigBrush = FALSE ;
  m_eetTouchEvent = EET_IGNORE ;
  m_penTouchEvent = NULL;
  m_tdeSendEventOnDamage = TDE_TOUCHONLY ;
  m_penSwitch = NULL;
  m_eetMarkerEvent = EET_IGNORE ;
  m_penMarkerEvent = NULL;
  m_tmBankingRotation = 0.0f;
  m_bMoving = FALSE ;
  m_vDesiredTranslation = FLOAT3D(0 , 0 , 0);
  m_aDesiredRotation = FLOAT3D(0 , 0 , 0);
  m_bInverseRotate = FALSE ;
  m_bStopMoving = FALSE ;
  m_bMoveToMarker = FALSE ;
  m_bSkipMarker = FALSE ;
  m_bValidMarker = FALSE ;
  m_fXLimitSign = 0.0f;
  m_fYLimitSign = 0.0f;
  m_fZLimitSign = 0.0f;
  m_aHLimitSign = 0.0f;
  m_aPLimitSign = 0.0f;
  m_aBLimitSign = 0.0f;
  m_vStartTranslation = FLOAT3D(0 , 0 , 0);
  m_aStartRotation = ANGLE3D(0 , 0 , 0);
  m_fCourseLength = 0.0f;
  m_aHeadLenght = 0.0f;
  m_aPitchLenght = 0.0f;
  m_aBankLenght = 0.0f;
  m_penSoundStart = NULL;
  m_penSoundStop = NULL;
  m_penSoundFollow = NULL;
  m_soStart.SetOwner(this);
m_soStart.Stop_internal();
  m_soStop.SetOwner(this);
m_soStop.Stop_internal();
  m_soFollow.SetOwner(this);
m_soFollow.Stop_internal();
  m_penMirror0 = NULL;
  m_penMirror1 = NULL;
  m_penMirror2 = NULL;
  m_penMirror3 = NULL;
  m_penMirror4 = NULL;
  m_fHealth = -1.0f;
  m_bBlowupByBull = FALSE ;
  m_eetBlowupEvent = EET_IGNORE ;
  m_penBlowupEvent = NULL;
  m_bZoning = FALSE ;
  m_bMoveOnDamage = FALSE ;
  m_fTouchDamage = 0.0f;
  m_colDebrises = C_WHITE ;
  m_ctDebrises = 12;
  m_fCandyEffect = 0.0f;
  m_fCubeFactor = 1.0f;
  m_bBlowupByDamager = FALSE ;
  CMovableBrushEntity::SetDefaultProperties();
}
  
#line 146 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::Precache(void) 
#line 147 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 148 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
PrecacheClass  (CLASS_DEBRIS );
#line 149 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
PrecacheModel  (MODEL_STONE );
#line 150 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
PrecacheTexture  (TEXTURE_STONE );
#line 151 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 153 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::GetForce(INDEX iForce,const FLOAT3D & vPoint,
#line 154 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CForceStrength & fsGravity,CForceStrength & fsField) 
#line 155 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 156 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
GetDefaultForce  (iForce  , vPoint  , fsGravity  , fsField );
#line 157 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 159 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 160 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 161 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 162 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bMoveOnDamage )
#line 163 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 164 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
EHit  eHit ;
#line 165 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SendEvent  (eHit );
#line 166 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return ;
#line 167 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 170 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_tdeSendEventOnDamage  != TDE_TOUCHONLY  && CanReactOnEntity  (penInflictor )){
#line 171 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SendToTarget  (m_penTouchEvent  , m_eetTouchEvent  , penInflictor );
#line 172 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 175 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_fHealth  < 0){
#line 177 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return ;
#line 178 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 181 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bBlowupByBull )
#line 182 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 184 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(dmtType  == DMT_IMPACT  && IsOfClass  (penInflictor  , "Werebull"))
#line 185 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 187 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CMovableBrushEntity  :: ReceiveDamage  (penInflictor  , dmtType  , m_fHealth  * 2 , vHitPoint  , vDirection );
#line 189 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
((CLiveEntity  *) penInflictor ) -> SetHealth  (0.0f);
#line 190 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
InflictDirectDamage  (penInflictor  , this  , DMT_IMPACT  , 1.0f , 
#line 191 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
GetPlacement  () . pl_PositionVector  , FLOAT3D (0 , 1 , 0));
#line 192 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 193 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 194 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
else if(m_bBlowupByDamager )
#line 195 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 196 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(dmtType  == DMT_DAMAGER )
#line 197 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 198 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CMovableBrushEntity  :: ReceiveDamage  (penInflictor  , dmtType  , fDamageAmmount  , vHitPoint  , vDirection );
#line 199 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 200 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 201 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
else 
#line 202 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 204 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if((dmtType  == DMT_EXPLOSION ) || 
#line 205 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
(dmtType  == DMT_PROJECTILE ) || 
#line 206 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
(dmtType  == DMT_CANNONBALL ))
#line 207 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 208 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CMovableBrushEntity  :: ReceiveDamage  (penInflictor  , dmtType  , fDamageAmmount  , vHitPoint  , vDirection );
#line 209 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 210 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 211 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 214 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::AdjustAngle(ANGLE & a) {
#line 215 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bInverseRotate ){
#line 216 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(a  > 0){a  = a  - 360;}
#line 217 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
else if(a  < 0){a  = 360 + a ;}
#line 218 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 219 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 223 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
BOOL CMovingBrush::MovesByTargetedRoute(CTString & strTargetProperty)const {
#line 224 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
strTargetProperty  = "Target";
#line 225 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE ;
#line 226 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 228 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
BOOL CMovingBrush::DropsMarker(CTFileName & fnmMarkerClass,CTString & strTargetProperty)const {
#line 229 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
fnmMarkerClass  = CTFILENAME  ("Classes\\MovingBrushMarker.ecl");
#line 230 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
strTargetProperty  = "Target";
#line 231 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE ;
#line 232 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 233 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
const CTString & CMovingBrush::GetDescription(void)const {
#line 234 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
((CTString &) m_strDescription ) . PrintF  ("-><none>");
#line 235 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_penTarget  != NULL ){
#line 236 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
((CTString &) m_strDescription ) . PrintF  ("->%s" , (const char  *) m_penTarget  -> GetName  ());
#line 237 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 238 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return m_strDescription ;
#line 239 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 241 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
const CTString & CMovingBrush::GetMirrorName(INDEX iMirror) 
#line 242 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 243 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
static const CTString strDummyName  ("");
#line 244 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
static const CTString strMarkerUnused  ("Marker not set");
#line 245 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(iMirror  == 0){
#line 246 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return strDummyName ;
#line 247 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 249 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
switch(iMirror ){
#line 250 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
case 1: {static const CTString str  ("std mirror 1");return str ;};break ;
#line 251 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
case 2: {static const CTString str  ("std mirror 2");return str ;};break ;
#line 252 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
case 3: {static const CTString str  ("std mirror 3");return str ;};break ;
#line 253 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
case 4: {static const CTString str  ("std mirror 4");return str ;};break ;
#line 254 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
case 5: {static const CTString str  ("std mirror 5");return str ;};break ;
#line 255 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
case 6: {static const CTString str  ("std mirror 6");return str ;};break ;
#line 256 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
case 7: {static const CTString str  ("std mirror 7");return str ;};break ;
#line 257 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
case 8: {static const CTString str  ("std mirror 8");return str ;};break ;
#line 258 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
default  :{
#line 259 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
iMirror  -= 9;
#line 260 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
INDEX ctMirrorMarkers  = & m_penMirror4  - & m_penMirror0 ;
#line 261 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(iMirror  < ctMirrorMarkers ){
#line 262 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CMirrorMarker  * pfm  = (CMirrorMarker  *) (& m_penMirror0 ) [ iMirror  ] . ep_pen ;
#line 263 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(pfm  != NULL ){
#line 264 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return pfm  -> GetMirrorName  ();
#line 265 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else {
#line 266 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return strMarkerUnused ;
#line 267 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 268 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 269 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 270 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 271 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return strDummyName ;
#line 272 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 275 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
BOOL CMovingBrush::GetMirror(INDEX iMirror,class CMirrorParameters & mpMirror) 
#line 276 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 277 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(iMirror  == 0){
#line 278 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return FALSE ;
#line 279 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 280 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(iMirror  >= 1 && iMirror  <= 8){
#line 281 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
mpMirror  . mp_ulFlags  = 0;
#line 282 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE ;
#line 283 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 284 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
iMirror  -= 9;
#line 285 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
INDEX ctMirrorMarkers  = & m_penMirror4  - & m_penMirror0 ;
#line 286 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(iMirror  < ctMirrorMarkers ){
#line 287 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CMirrorMarker  * pmm  = (CMirrorMarker  *) (& m_penMirror0 ) [ iMirror  ] . ep_pen ;
#line 288 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(pmm  != NULL ){
#line 289 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
pmm  -> GetMirror  (mpMirror );
#line 290 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE ;
#line 291 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 292 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 293 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return FALSE ;
#line 294 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 297 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::PreMoving() {
#line 298 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bMoveToMarker ){
#line 299 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
const FLOAT3D & vTarget  = m_penTarget  -> GetPlacement  () . pl_PositionVector ;
#line 300 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
const ANGLE3D & aTarget  = m_penTarget  -> GetPlacement  () . pl_OrientationAngle ;
#line 301 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
const FLOAT3D & vSource  = GetPlacement  () . pl_PositionVector ;
#line 302 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
const ANGLE3D & aSource  = GetPlacement  () . pl_OrientationAngle ;
#line 305 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
FLOAT3D vSpeed  = (vTarget  - vSource ) / _pTimer  -> TickQuantum ;
#line 307 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(Abs  (vSpeed  (1)) < TRANSLATION_EPSILON ){
#line 308 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
vSpeed  (1) = 0.0f;
#line 309 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else if((vSpeed  (1) - m_vDesiredTranslation  (1)) * m_fXLimitSign  > 0){
#line 310 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
vSpeed  (1) = m_vDesiredTranslation  (1);
#line 311 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 313 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(Abs  (vSpeed  (2)) < TRANSLATION_EPSILON ){
#line 314 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
vSpeed  (2) = 0.0f;
#line 315 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else if((vSpeed  (2) - m_vDesiredTranslation  (2)) * m_fYLimitSign  > 0){
#line 316 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
vSpeed  (2) = m_vDesiredTranslation  (2);
#line 317 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 319 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(Abs  (vSpeed  (3)) < TRANSLATION_EPSILON ){
#line 320 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
vSpeed  (3) = 0.0f;
#line 321 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else if((vSpeed  (3) - m_vDesiredTranslation  (3)) * m_fZLimitSign  > 0){
#line 322 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
vSpeed  (3) = m_vDesiredTranslation  (3);
#line 323 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 326 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
ANGLE3D aSpeed ;
#line 327 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (1) = NormalizeAngle  (aTarget  (1) - aSource  (1));
#line 328 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
AdjustAngle  (aSpeed  (1));
#line 329 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (1) = Abs  (aSpeed  (1)) * m_aHLimitSign ;
#line 330 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (1) /= _pTimer  -> TickQuantum ;
#line 331 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (2) = NormalizeAngle  (aTarget  (2) - aSource  (2));
#line 332 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
AdjustAngle  (aSpeed  (2));
#line 333 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (2) = Abs  (aSpeed  (2)) * m_aPLimitSign ;
#line 334 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (2) /= _pTimer  -> TickQuantum ;
#line 335 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (3) = NormalizeAngle  (aTarget  (3) - aSource  (3));
#line 336 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
AdjustAngle  (aSpeed  (3));
#line 337 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (3) = Abs  (aSpeed  (3)) * m_aBLimitSign ;
#line 338 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (3) /= _pTimer  -> TickQuantum ;
#line 340 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(Abs  (aSpeed  (1)) < ROTATION_EPSILON ){
#line 341 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (1) = 0.0f;
#line 342 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else if((aSpeed  (1) - m_aDesiredRotation  (1)) * m_aHLimitSign  > 0){
#line 343 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (1) = m_aDesiredRotation  (1);
#line 344 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 346 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(Abs  (aSpeed  (2)) < ROTATION_EPSILON ){
#line 347 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (2) = 0.0f;
#line 348 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else if((aSpeed  (2) - m_aDesiredRotation  (2)) * m_aPLimitSign  > 0){
#line 349 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (2) = m_aDesiredRotation  (2);
#line 350 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 352 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(Abs  (aSpeed  (3)) < ROTATION_EPSILON ){
#line 353 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (3) = 0.0f;
#line 354 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else if((aSpeed  (3) - m_aDesiredRotation  (3)) * m_aBLimitSign  > 0){
#line 355 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (3) = m_aDesiredRotation  (3);
#line 356 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 359 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(vSpeed  (1) == 0.0f && vSpeed  (2) == 0.0f && vSpeed  (3) == 0.0f && 
#line 360 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aSpeed  (1) == 0.0f && aSpeed  (2) == 0.0f && aSpeed  (3) == 0.0f){
#line 362 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
ForceFullStop  ();
#line 364 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bMoveToMarker  = FALSE ;
#line 366 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SendEvent  (EEnd  ());
#line 369 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else {
#line 370 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDesiredTranslation  (vSpeed );
#line 371 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDesiredRotation  (aSpeed );
#line 372 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 374 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 375 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CMovableBrushEntity  :: PreMoving  ();
#line 376 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 380 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
BOOL CMovingBrush::LoadMarkerParameters() {
#line 381 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_penTarget  == NULL ){
#line 382 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return FALSE ;
#line 383 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 385 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(! IsOfClass  (m_penTarget  , "Moving Brush Marker")){
#line 386 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
WarningMessage  ("Entity '%s' is not of Moving Brush Marker class!" , (const char  *) m_penTarget  -> GetName  ());
#line 387 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return FALSE ;
#line 388 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 390 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CMovingBrushMarker  & mbm  = (CMovingBrushMarker  &) * m_penTarget ;
#line 391 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(mbm  . m_penTarget  == NULL ){
#line 392 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return FALSE ;
#line 393 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 396 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(mbm  . m_fSpeed  > 0.0f){m_fSpeed  = mbm  . m_fSpeed ;}
#line 399 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(mbm  . m_fWaitTime  >= 0.0f){m_fWaitTime  = mbm  . m_fWaitTime ;}
#line 402 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bInverseRotate  = mbm  . m_bInverseRotate ;
#line 405 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetBoolFromBoolEType  (m_bMoveOnTouch  , mbm  . m_betMoveOnTouch );
#line 408 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bStopMoving  = mbm  . m_bStopMoving ;
#line 411 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(mbm  . m_fBlockDamage  >= 0.0f){
#line 412 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_fBlockDamage  = mbm  . m_fBlockDamage ;
#line 413 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 416 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(mbm  . m_penTouchEvent  != NULL ){
#line 417 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_penTouchEvent  = mbm  . m_penTouchEvent ;
#line 418 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_eetTouchEvent  = mbm  . m_eetTouchEvent ;
#line 419 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 422 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SendToTarget  (mbm  . m_penMarkerEvent  , mbm  . m_eetMarkerEvent );
#line 425 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(mbm  . m_penSoundStart  != NULL ){
#line 426 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_penSoundStart  = mbm  . m_penSoundStart ;
#line 427 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 428 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(mbm  . m_penSoundStop  != NULL ){
#line 429 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_penSoundStop  = mbm  . m_penSoundStop ;
#line 430 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 431 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(mbm  . m_penSoundFollow  != NULL ){
#line 432 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_penSoundFollow  = mbm  . m_penSoundFollow ;
#line 433 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 435 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE ;
#line 436 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 440 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
BOOL CMovingBrush::CanReactOnEntity(CEntity * pen) 
#line 441 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 442 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(pen  == NULL ){
#line 443 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return FALSE ;
#line 444 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 446 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(! (pen  -> GetFlags  () & ENF_ALIVE )){
#line 447 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return FALSE ;
#line 448 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 450 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bPlayersOnly  && ! IsDerivedFromClass  (pen  , "Player")){
#line 451 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return FALSE ;
#line 452 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 454 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE ;
#line 455 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 458 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::PlayStartSound(void) {
#line 460 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_penSoundStart  != NULL ){
#line 461 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CSoundHolder  & sh  = (CSoundHolder  &) * m_penSoundStart ;
#line 462 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_soStart  . Set3DParameters  (FLOAT (sh  . m_rFallOffRange ) , FLOAT (sh  . m_rHotSpotRange ) , sh  . m_fVolume  , 1.0f);
#line 463 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
PlaySound  (m_soStart  , sh  . m_fnSound  , sh  . m_iPlayType );
#line 464 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 465 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 468 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::PlayStopSound(void) {
#line 470 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_penSoundStop  != NULL ){
#line 471 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CSoundHolder  & sh  = (CSoundHolder  &) * m_penSoundStop ;
#line 472 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_soStop  . Set3DParameters  (FLOAT (sh  . m_rFallOffRange ) , FLOAT (sh  . m_rHotSpotRange ) , sh  . m_fVolume  , 1.0f);
#line 473 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
PlaySound  (m_soStop  , sh  . m_fnSound  , sh  . m_iPlayType );
#line 474 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 475 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 478 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::PlayFollowSound(void) {
#line 480 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_penSoundFollow  != NULL ){
#line 481 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CSoundHolder  & sh  = (CSoundHolder  &) * m_penSoundFollow ;
#line 482 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_soFollow  . Set3DParameters  (FLOAT (sh  . m_rFallOffRange ) , FLOAT (sh  . m_rHotSpotRange ) , sh  . m_fVolume  , 1.0f);
#line 483 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
PlaySound  (m_soFollow  , sh  . m_fnSound  , sh  . m_iPlayType );
#line 484 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 485 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 488 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::StopFollowSound(void) {
#line 489 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_soFollow  . Stop  ();
#line 490 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 493 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::MovingOn(void) 
#line 494 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 495 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bMoving ){
#line 496 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return ;
#line 497 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 498 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bVeryBigBrush ){
#line 499 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetCollisionFlags  (ECF_BRUSH  | ECF_IGNOREMODELS );
#line 500 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 501 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bMoving  = TRUE ;
#line 502 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
  
#line 503 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
void CMovingBrush::MovingOff(void) 
#line 504 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 505 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(! m_bMoving ){
#line 506 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return ;
#line 507 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 508 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bVeryBigBrush ){
#line 509 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetCollisionFlags  (ECF_BRUSH );
#line 510 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 511 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bMoving  = FALSE ;
#line 512 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
BOOL CMovingBrush::
#line 516 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
MoveToMarker(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMovingBrush_MoveToMarker
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMovingBrush::MoveToMarker expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 518 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
const FLOAT3D & vTarget  = m_penTarget  -> GetPlacement  () . pl_PositionVector ;
#line 519 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
const ANGLE3D & aTarget  = m_penTarget  -> GetPlacement  () . pl_OrientationAngle ;
#line 520 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
const FLOAT3D & vSource  = GetPlacement  () . pl_PositionVector ;
#line 521 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
const ANGLE3D & aSource  = GetPlacement  () . pl_OrientationAngle ;
#line 524 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_vDesiredTranslation  = (vTarget  - vSource ) / m_fSpeed ;
#line 525 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_fXLimitSign  = Sgn  (vTarget  (1) - vSource  (1));
#line 526 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_fYLimitSign  = Sgn  (vTarget  (2) - vSource  (2));
#line 527 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_fZLimitSign  = Sgn  (vTarget  (3) - vSource  (3));
#line 531 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
ANGLE aDelta  = NormalizeAngle  (aTarget  (1) - aSource  (1));
#line 532 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
AdjustAngle  (aDelta );
#line 533 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_aDesiredRotation  (1) = aDelta  / m_fSpeed ;
#line 534 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_aHLimitSign  = Sgn  (aDelta );
#line 536 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aDelta  = NormalizeAngle  (aTarget  (2) - aSource  (2));
#line 537 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
AdjustAngle  (aDelta );
#line 538 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_aDesiredRotation  (2) = aDelta  / m_fSpeed ;
#line 539 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_aPLimitSign  = Sgn  (aDelta );
#line 541 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
aDelta  = NormalizeAngle  (aTarget  (3) - aSource  (3));
#line 542 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
AdjustAngle  (aDelta );
#line 543 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_aDesiredRotation  (3) = aDelta  / m_fSpeed ;
#line 544 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_aBLimitSign  = Sgn  (aDelta );
#line 547 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bMoveToMarker  = TRUE ;
#line 548 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDesiredTranslation  (m_vDesiredTranslation );
#line 549 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDesiredRotation  (m_aDesiredRotation );
#line 552 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00650003, FALSE, EBegin());return TRUE;}BOOL CMovingBrush::H0x00650003_MoveToMarker_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650003
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EStop):{const EStop&e= (EStop&)__eeInput;

#line 555 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 556 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 557 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;case(EVENTCODE_EBlock):{const EBlock&eBlock= (EBlock&)__eeInput;

#line 561 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
InflictDirectDamage  (eBlock  . penOther  , this  , DMT_BRUSH  , m_fBlockDamage  , 
#line 562 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
FLOAT3D (0.0f , 0.0f , 0.0f) , (FLOAT3D &) eBlock  . plCollision );
#line 563 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_ebaAction  == BA_BOUNCE ){
#line 565 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDesiredTranslation  (- m_vDesiredTranslation );
#line 566 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDesiredRotation  (- m_aDesiredRotation );
#line 568 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Call(STATE_CURRENT, STATE_CMovingBrush_BounceObstructed, TRUE, EVoid());return TRUE;
#line 569 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else if(m_ebaAction  == BA_SKIPMARKER ){
#line 571 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
ForceFullStop  ();
#line 573 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bMoveToMarker  = FALSE ;
#line 575 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bSkipMarker  = TRUE ;
#line 576 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Return(STATE_CURRENT,EEnd  ());
#line 576 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 577 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 578 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 579 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 580 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}return TRUE;}BOOL CMovingBrush::H0x00650004_MoveToMarker_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650004
 ASSERT(FALSE); return TRUE;};BOOL CMovingBrush::
#line 583 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
BounceObstructed(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMovingBrush_BounceObstructed
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMovingBrush::BounceObstructed expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 584 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetTimerAfter(0.2f);
Jump(STATE_CURRENT, 0x00650006, FALSE, EBegin());return TRUE;}BOOL CMovingBrush::H0x00650006_BounceObstructed_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650006
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00650007, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMovingBrush::H0x00650007_BounceObstructed_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650007
;
#line 586 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDesiredTranslation  (m_vDesiredTranslation );
#line 587 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDesiredRotation  (m_aDesiredRotation );
#line 588 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Return(STATE_CURRENT,EVoid());
#line 588 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CMovingBrush::
#line 591 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Rotating(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMovingBrush_Rotating
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMovingBrush::Rotating expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 593 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bAutoStart ){
#line 594 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Jump(STATE_CURRENT, STATE_CMovingBrush_RotActive, TRUE, EVoid());return TRUE;
#line 595 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else {
#line 596 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Jump(STATE_CURRENT, STATE_CMovingBrush_RotInactive, TRUE, EVoid());return TRUE;
#line 597 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
} ASSERT(FALSE); return TRUE;};BOOL CMovingBrush::
#line 600 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
RotInactive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMovingBrush_RotInactive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMovingBrush::RotInactive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 602 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 603 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x0065000a, FALSE, EBegin());return TRUE;}BOOL CMovingBrush::H0x0065000a_RotInactive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0065000a
switch(__eeInput.ee_slEvent){case(EVENTCODE_EActivate):{const EActivate&e= (EActivate&)__eeInput;

#line 605 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Jump(STATE_CURRENT, STATE_CMovingBrush_RotActive, TRUE, EVoid());return TRUE;
#line 606 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;default:{
#line 608 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 609 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;
#line 610 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}return TRUE;}BOOL CMovingBrush::H0x0065000b_RotInactive_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0065000b
; ASSERT(FALSE); return TRUE;};BOOL CMovingBrush::
#line 613 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
RotActive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMovingBrush_RotActive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMovingBrush::RotActive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 615 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 360.0f / m_tmBankingRotation ));
#line 617 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x0065000d, FALSE, EBegin());return TRUE;}BOOL CMovingBrush::H0x0065000d_RotActive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0065000d
switch(__eeInput.ee_slEvent){case(EVENTCODE_EDeactivate):{const EDeactivate&e= (EDeactivate&)__eeInput;

#line 619 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Jump(STATE_CURRENT, STATE_CMovingBrush_RotInactive, TRUE, EVoid());return TRUE;
#line 620 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;default:{
#line 622 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 623 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;
#line 624 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}return TRUE;}BOOL CMovingBrush::H0x0065000e_RotActive_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0065000e
; ASSERT(FALSE); return TRUE;};BOOL CMovingBrush::
#line 628 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
MoveBrush(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMovingBrush_MoveBrush
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMovingBrush::MoveBrush expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 630 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_penTarget  == NULL ){
#line 631 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
MovingOff  ();
#line 632 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Return(STATE_CURRENT,EVoid());
#line 632 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 633 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 635 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
MovingOn  ();
#line 638 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Jump(STATE_CURRENT,0x00650017, FALSE, EInternal());return TRUE;}BOOL CMovingBrush::H0x00650017_MoveBrush_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650017

#line 640 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_penTarget  = m_penTarget  -> GetTarget  ();
#line 642 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_penTarget  == NULL ){
#line 643 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
MovingOff  ();
#line 644 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Return(STATE_CURRENT,EVoid  ());
#line 644 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 645 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 648 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(!(m_bSkipMarker )){ Jump(STATE_CURRENT,0x00650014, FALSE, EInternal());return TRUE;}
#line 649 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bSkipMarker  = FALSE ;Jump(STATE_CURRENT,0x00650013, FALSE, EInternal());return TRUE;}BOOL CMovingBrush::H0x00650014_MoveBrush_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650014
if(!(m_fWaitTime  > 0.0f)){ Jump(STATE_CURRENT,0x00650012, FALSE, EInternal());return TRUE;}
#line 652 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetTimerAfter(m_fWaitTime );
Jump(STATE_CURRENT, 0x00650010, FALSE, EBegin());return TRUE;}BOOL CMovingBrush::H0x00650010_MoveBrush_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650010
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00650011, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMovingBrush::H0x00650011_MoveBrush_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650011
;Jump(STATE_CURRENT,0x00650012, FALSE, EInternal());return TRUE;}BOOL CMovingBrush::H0x00650012_MoveBrush_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650012
Jump(STATE_CURRENT,0x00650013, FALSE, EInternal());return TRUE;}
BOOL CMovingBrush::H0x00650013_MoveBrush_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650013

#line 655 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
PlayStartSound  ();
#line 656 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
PlayFollowSound  ();
#line 657 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
STATE_CMovingBrush_MoveToMarker, TRUE;
Jump(STATE_CURRENT, 0x00650015, FALSE, EBegin());return TRUE;}BOOL CMovingBrush::H0x00650015_MoveBrush_06(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650015
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CMovingBrush_MoveToMarker, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x00650016, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CMovingBrush::H0x00650016_MoveBrush_07(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650016
const EEnd&__e= (EEnd&)__eeInput;
;
#line 658 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
StopFollowSound  ();
#line 659 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
PlayStopSound  ();
#line 662 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bValidMarker  = LoadMarkerParameters  ();
#line 665 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bSkipMarker ){
#line 666 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bStopMoving  = FALSE ;
#line 667 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}if(!(! m_bStopMoving  && m_bValidMarker )){ Jump(STATE_CURRENT,0x00650018, FALSE, EInternal());return TRUE;}Jump(STATE_CURRENT,0x00650017, FALSE, EInternal());return TRUE;
#line 668 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}BOOL CMovingBrush::H0x00650018_MoveBrush_09(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00650018

#line 670 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
MovingOff  ();
#line 671 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Return(STATE_CURRENT,EVoid());
#line 671 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CMovingBrush::
#line 674 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
TeleportToStopMarker(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMovingBrush_TeleportToStopMarker
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMovingBrush::TeleportToStopMarker expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 676 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
MovingOn  ();
#line 678 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
INDEX ctMarkers  = 0;
#line 680 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
CMovingBrushMarker  * pmbm  = (CMovingBrushMarker  *) m_penTarget  . ep_pen ;
#line 681 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
while(pmbm  != NULL  && IsOfClass  (pmbm  -> m_penTarget  , "Moving Brush Marker") && ! pmbm  -> m_bStopMoving  && ctMarkers  < 50)
#line 682 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 683 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
pmbm  = (CMovingBrushMarker  *) pmbm  -> m_penTarget  . ep_pen ;
#line 684 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
ctMarkers  ++;
#line 685 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 687 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(pmbm  != NULL  && IsOfClass  (pmbm  , "Moving Brush Marker") && ctMarkers  < 50)
#line 688 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 689 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetPlacement  (pmbm  -> GetPlacement  ());
#line 690 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
ForceFullStop  ();
#line 691 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_soStart  . Stop  ();
#line 692 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_soStop  . Stop  ();
#line 693 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_soFollow  . Stop  ();
#line 694 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 697 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bMoveToMarker  = FALSE ;
#line 698 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
MovingOff  ();
#line 699 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Return(STATE_CURRENT,EReturn  ());
#line 699 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CMovingBrush::
#line 702 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMovingBrush_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMovingBrush::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 704 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
InitAsBrush  ();
#line 705 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetPhysicsFlags  (EPF_BRUSH_MOVING );
#line 706 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetCollisionFlags  (ECF_BRUSH );
#line 707 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetHealth  (m_fHealth );
#line 710 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bZoning ){
#line 711 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetFlags  (GetFlags  () | ENF_ZONING );
#line 712 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else {
#line 713 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetFlags  (GetFlags  () & ~ ENF_ZONING );
#line 714 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 717 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_penSoundFollow  != NULL  && ! IsDerivedFromClass  (m_penSoundFollow  , "SoundHolder")){
#line 718 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_penSoundFollow  = NULL ;
#line 719 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
WarningMessage  ("Only SoundHolder can be selected as Follow sound for MovingBrush!");
#line 720 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 723 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_penSoundStart  != NULL  && ! IsDerivedFromClass  (m_penSoundStart  , "SoundHolder")){
#line 724 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_penSoundStart  = NULL ;
#line 725 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
WarningMessage  ("Only SoundHolder can be selected as Start sound for MovingBrush!");
#line 726 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 729 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_penSoundStop  != NULL  && ! IsDerivedFromClass  (m_penSoundStop  , "SoundHolder")){
#line 730 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_penSoundStop  = NULL ;
#line 731 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
WarningMessage  ("Only SoundHolder can be selected as Stop sound for MovingBrush!");
#line 732 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 735 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bDynamicShadows ){
#line 736 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetFlags  (GetFlags  () | ENF_DYNAMICSHADOWS );
#line 737 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}else {
#line 738 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetFlags  (GetFlags  () & ~ ENF_DYNAMICSHADOWS );
#line 739 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 742 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
ForceFullStop  ();
#line 744 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x0065001a, FALSE, EBegin());return TRUE;}BOOL CMovingBrush::H0x0065001a_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0065001a
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0065001b, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMovingBrush::H0x0065001b_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0065001b
;
#line 747 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bValidMarker  = LoadMarkerParameters  ();
#line 749 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_tmBankingRotation  != 0){
#line 750 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Jump(STATE_CURRENT, STATE_CMovingBrush_Rotating, TRUE, EVoid());return TRUE;
#line 751 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 754 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x0065001c, FALSE, EBegin());return TRUE;}BOOL CMovingBrush::H0x0065001c_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0065001c
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 756 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bAutoStart ){
#line 758 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(! m_bMoving  && m_bValidMarker ){
#line 759 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Call(STATE_CURRENT, STATE_CMovingBrush_MoveBrush, TRUE, EVoid());return TRUE;
#line 760 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 761 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 762 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 763 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;case(EVENTCODE_EHit):{const EHit&eHit= (EHit&)__eeInput;

#line 765 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(! m_bMoving ){
#line 766 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Call(STATE_CURRENT, STATE_CMovingBrush_MoveBrush, TRUE, EVoid());return TRUE;
#line 767 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 768 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 769 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&eTouch= (ETouch&)__eeInput;

#line 773 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_fTouchDamage  != 0.0f)
#line 774 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 775 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
InflictDirectDamage  (eTouch  . penOther  , this  , DMT_SPIKESTAB  , m_fTouchDamage  , 
#line 776 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
eTouch  . penOther  -> GetPlacement  () . pl_PositionVector  , eTouch  . plCollision );
#line 777 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 779 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_tdeSendEventOnDamage  != TDE_DAMAGEONLY  && CanReactOnEntity  (eTouch  . penOther )){
#line 780 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SendToTarget  (m_penTouchEvent  , m_eetTouchEvent );
#line 781 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 783 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(! m_bMoving ){
#line 785 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bMoveOnTouch  && CanReactOnEntity  (eTouch  . penOther ) && m_bValidMarker ){
#line 786 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Call(STATE_CURRENT, STATE_CMovingBrush_MoveBrush, TRUE, EVoid());return TRUE;
#line 787 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 788 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 790 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_bBlowupByBull ){
#line 792 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(IsOfClass  (eTouch  . penOther  , "Werebull")){
#line 794 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
FLOAT fImpactSpeed  = 
#line 795 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
((CMovableEntity  &) * eTouch  . penOther ) . en_vCurrentTranslationAbsolute  % 
#line 796 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
- (FLOAT3D &) eTouch  . plCollision ;
#line 799 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(fImpactSpeed  > m_fHealth ){
#line 801 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
ReceiveDamage  (eTouch  . penOther  , DMT_IMPACT  , m_fHealth  * 2 , 
#line 802 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
FLOAT3D (0 , 0 , 0) , FLOAT3D (0 , 0 , 0));
#line 803 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 804 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 805 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 806 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 807 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStart):{const EStart&e= (EStart&)__eeInput;

#line 811 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(! m_bMoving  && m_bValidMarker ){
#line 812 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Call(STATE_CURRENT, STATE_CMovingBrush_MoveBrush, TRUE, EVoid());return TRUE;
#line 813 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 814 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 815 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStop):{const EStop&e= (EStop&)__eeInput;

#line 817 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 818 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 819 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETeleportMovingBrush):{const ETeleportMovingBrush&e= (ETeleportMovingBrush&)__eeInput;

#line 821 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Call(STATE_CURRENT, STATE_CMovingBrush_TeleportToStopMarker, TRUE, EVoid());return TRUE;
#line 822 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 823 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):{const ETrigger&e= (ETrigger&)__eeInput;

#line 826 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(! m_bMoving  && m_bValidMarker ){
#line 827 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Call(STATE_CURRENT, STATE_CMovingBrush_MoveBrush, TRUE, EVoid());return TRUE;
#line 828 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 829 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE;
#line 830 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&eDeath= (EDeath&)__eeInput;

#line 833 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
FLOATaabbox3D box ;
#line 834 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
GetSize  (box );
#line 835 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
if(m_ctDebrises  <= 0)
#line 836 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{
#line 837 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_ctDebrises  = 1;
#line 838 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 839 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
FLOAT fEntitySize  = pow  (box  . Size  () (1) * box  . Size  () (2) * box  . Size  () (3) / m_ctDebrises  , 1.0f / 3.0f) * m_fCubeFactor ;
#line 841 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Debris_Begin  (EIBT_ROCK  , DPT_NONE  , BET_NONE  , fEntitySize  , FLOAT3D (1.0f , 2.0f , 3.0f) , 
#line 842 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
FLOAT3D (0 , 0 , 0) , 1.0f + m_fCandyEffect  / 2.0f , m_fCandyEffect  , m_colDebrises );
#line 843 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
for(INDEX iDebris  = 0;iDebris  < m_ctDebrises ;iDebris  ++){
#line 844 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Debris_Spawn  (this  , this  , MODEL_STONE  , TEXTURE_STONE  , 0 , 0 , 0 , IRnd  () % 4 , 1.0f , 
#line 845 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
FLOAT3D (FRnd  () * 0.8f + 0.1f , FRnd  () * 0.8f + 0.1f , FRnd  () * 0.8f + 0.1f));
#line 846 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 849 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
FOREACHINLIST  (CEntity  , en_lnInParent  , en_lhChildren  , iten ){
#line 850 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
iten  -> SendEvent  (EBrushDestroyed  ());
#line 851 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}
#line 853 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SendToTarget  (m_penBlowupEvent  , m_eetBlowupEvent  , eDeath  . eLastDamage  . penInflictor );
#line 856 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_tdeSendEventOnDamage  = TDE_TOUCHONLY ;
#line 857 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_fHealth  = - 1;
#line 858 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
m_bMoveOnDamage  = FALSE ;
#line 859 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
ForceFullStop  ();
#line 860 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetDefaultProperties  ();
#line 864 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
NotifyCollisionChanged  ();
#line 866 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetFlags  (GetFlags  () | ENF_HIDDEN );
#line 867 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 870 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
{FOREACHINLIST  (CEntity  , en_lnInParent  , en_lhChildren  , itenChild ){
#line 872 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
itenChild  -> SendEvent  (ERangeModelDestruction  ());
#line 873 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}}
#line 875 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
UnsetTimer();Jump(STATE_CURRENT,0x0065001d, FALSE, EInternal());return TRUE;
#line 876 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 877 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
}return TRUE;}BOOL CMovingBrush::H0x0065001d_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0065001d

#line 878 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
Return(STATE_CURRENT,EVoid());
#line 878 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/MovingBrush.es"
return TRUE; ASSERT(FALSE); return TRUE;};