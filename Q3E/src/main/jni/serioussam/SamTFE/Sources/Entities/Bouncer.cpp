/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 17 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"

#include "Entities/StdH/StdH.h"

#include <Entities/Bouncer.h>
#include <Entities/Bouncer_tables.h>
#line 21 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"


extern DECL_DLL void JumpFromBouncer(CEntity *penToBounce, CEntity *penBouncer)
{
  CEntity *pen = penToBounce;
  CBouncer *pbo = (CBouncer *)penBouncer;
  // if it is a movable model and some time has passed from the last jump
  if ( (pen->GetRenderType()==CEntity::RT_MODEL) &&
       (pen->GetPhysicsFlags()&EPF_MOVABLE) ) {
    CMovableEntity *pmen = (CMovableEntity *)pen;
    if (pmen->en_penReference==NULL) {
      return;
    }
    // give it speed
    FLOAT3D vDir;
    AnglesToDirectionVector(pbo->m_aDirection, vDir);
    pmen->FakeJump(pmen->en_vIntendedTranslation, vDir, pbo->m_fSpeed, 
      -pbo->m_fParallelComponentMultiplier, pbo->m_fNormalComponentMultiplier, pbo->m_fMaxExitSpeed, pbo->m_tmControl);
  }
}


void CBouncer::SetDefaultProperties(void) {
  m_strName = "Bouncer";
  m_strDescription = "";
  m_fSpeed = 20.0f;
  m_aDirection = ANGLE3D(0 , 90 , 0);
  m_tmControl = 5.0f;
  m_bEntrySpeed = TRUE ;
  m_fMaxExitSpeed = 200.0f;
  m_fNormalComponentMultiplier = 1.0f;
  m_fParallelComponentMultiplier = 0.0f;
  CRationalEntity::SetDefaultProperties();
}
BOOL CBouncer::
#line 64 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CBouncer_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CBouncer::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 66 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
InitAsBrush  ();
#line 67 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
SetPhysicsFlags  (EPF_BRUSH_FIXED  | EPF_NOIMPACT );
#line 68 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
SetCollisionFlags  (ECF_BRUSH );
#line 71 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
if(! m_bEntrySpeed )
#line 72 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
{
#line 74 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
m_fNormalComponentMultiplier  = 0.0f;
#line 75 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
m_bEntrySpeed  = TRUE ;
#line 76 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
}
#line 77 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
Return(STATE_CURRENT,EVoid());
#line 77 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Bouncer.es"
return TRUE; ASSERT(FALSE); return TRUE;};