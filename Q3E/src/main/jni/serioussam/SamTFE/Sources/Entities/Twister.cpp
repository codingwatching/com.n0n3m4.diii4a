/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 17 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"

#include "Entities/StdH/StdH.h"

#define ECF_TWISTER ( \
  ((ECBI_BRUSH|ECBI_MODEL|ECBI_CORPSE|ECBI_ITEM|ECBI_PROJECTILE_MAGIC|ECBI_PROJECTILE_SOLID)<<ECB_TEST) |\
  ((ECBI_MODEL|ECBI_CORPSE|ECBI_ITEM|ECBI_PROJECTILE_MAGIC|ECBI_PROJECTILE_SOLID)<<ECB_PASS) |\
  ((ECBI_MODEL)<<ECB_IS))
#define EPF_TWISTER ( \
  EPF_ONBLOCK_CLIMBORSLIDE|EPF_ORIENTEDBYGRAVITY|\
  EPF_TRANSLATEDBYGRAVITY|EPF_MOVABLE)

#include <Entities/Twister.h>
#include <Entities/Twister_tables.h>
CEntityEvent *ETwister::MakeCopy(void) { CEntityEvent *peeCopy = new ETwister(*this); return peeCopy;}
ETwister::ETwister() : CEntityEvent(EVENTCODE_ETwister) {;
 ClearToDefault(penOwner);
 ClearToDefault(EtsSize);
};
#line 47 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"

static EntityInfo eiTwister = {
  EIBT_AIR, 0.0f,
  0.0f, 1.0f, 0.0f,
  0.0f, 0.75f, 0.0f,
};


#define MOVE_FREQUENCY 0.1f
#define ROTATE_SPEED 10000.0f
#define MOVE_SPEED 7.5f

void CTwister::SetDefaultProperties(void) {
  m_penOwner = NULL;
  m_EtsSize = TWS_SMALL ;
  m_vStartPosition = FLOAT3D(0 , 0 , 0);
  m_vDesiredPosition = FLOAT3D(0 , 0 , 0);
  m_vDesiredAngle = FLOAT3D(0 , 0 , 0);
  m_fStopTime = 0.0f;
  m_fActionRadius = 0.0f;
  m_fActionTime = 0.0f;
  m_fDiffMultiply = 0.0f;
  m_fUpMultiply = 0.0f;
  m_bFadeOut = FALSE ;
  m_fFadeStartTime = 0.0f;
  m_fFadeTime = 2.0f;
  CMovableModelEntity::SetDefaultProperties();
}
  
#line 88 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void * CTwister::GetEntityInfo(void) {
#line 89 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
return & eiTwister ;
#line 90 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 93 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 94 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 95 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
{
#line 96 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
return ;
#line 97 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 104 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
BOOL CTwister::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) {
#line 105 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
if(m_bFadeOut ){
#line 106 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
FLOAT fTimeRemain  = m_fFadeStartTime  + m_fFadeTime  - _pTimer  -> CurrentTick  ();
#line 107 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
if(fTimeRemain  < 0.0f){fTimeRemain  = 0.0f;}
#line 108 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
COLOR colAlpha  = GetModelObject  () -> mo_colBlendColor ;
#line 109 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
colAlpha  = (colAlpha  & 0xffffff00) + (COLOR (fTimeRemain  / m_fFadeTime  * 0xff) & 0xff);
#line 110 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
GetModelObject  () -> mo_colBlendColor  = colAlpha ;
#line 111 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
#line 112 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
return CMovableModelEntity  :: AdjustShadingParameters  (vLightDirection  , colLight  , colAmbient );
#line 113 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 121 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::CalcHeadingRotation(ANGLE aWantedHeadingRelative,ANGLE & aRotation) {
#line 123 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
aWantedHeadingRelative  = NormalizeAngle  (aWantedHeadingRelative );
#line 126 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
if(aWantedHeadingRelative  < - ROTATE_SPEED  * MOVE_FREQUENCY ){
#line 128 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
aRotation  = - ROTATE_SPEED ;
#line 130 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}else if(aWantedHeadingRelative  > ROTATE_SPEED  * MOVE_FREQUENCY ){
#line 132 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
aRotation  = + ROTATE_SPEED ;
#line 134 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}else {
#line 135 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
aRotation  = aWantedHeadingRelative  / MOVE_FREQUENCY ;
#line 136 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
#line 137 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 140 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::CalcAngleFromPosition() {
#line 142 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_vDesiredAngle  = (m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 143 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 146 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::RotateToAngle() {
#line 148 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
ANGLE aRotation ;
#line 149 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
CalcHeadingRotation  (GetRelativeHeading  (m_vDesiredAngle ) , aRotation );
#line 152 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetDesiredRotation  (ANGLE3D (aRotation  , 0 , 0));
#line 153 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 156 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::MoveInDirection() {
#line 157 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
RotateToAngle  ();
#line 160 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
FLOAT3D vTranslation  (0.0f , 0.0f , 0.0f);
#line 161 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
vTranslation  (3) = - MOVE_SPEED ;
#line 164 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetDesiredTranslation  (vTranslation );
#line 165 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 168 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::MoveToPosition() {
#line 169 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
CalcAngleFromPosition  ();
#line 170 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
MoveInDirection  ();
#line 171 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 174 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::RotateToPosition() {
#line 175 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
CalcAngleFromPosition  ();
#line 176 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
RotateToAngle  ();
#line 177 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 180 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::StopMoving() {
#line 181 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
StopRotating  ();
#line 182 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
StopTranslating  ();
#line 183 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 186 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::StopRotating() {
#line 187 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 188 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 191 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::StopTranslating() {
#line 192 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetDesiredTranslation  (FLOAT3D (0.0f , 0.0f , 0.0f));
#line 193 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
  
#line 200 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
void CTwister::SpinEntity(CEntity * pen) {
#line 202 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
if(! (IsOfClass  (pen  , "Elemental") && ((CElemental  &) * pen ) . m_EetType  == ELT_AIR ) && 
#line 203 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
! (IsOfClass  (pen  , "Twister"))){
#line 204 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
if(pen  -> GetPhysicsFlags  () & EPF_MOVABLE ){
#line 206 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
FLOAT3D vSpeed ;
#line 207 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
vSpeed  = FLOAT3D (en_mRotation  (1 , 2) , en_mRotation  (2 , 2) , en_mRotation  (3 , 2)) * m_fUpMultiply ;
#line 208 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
FLOAT3D vDiff  = (pen  -> GetPlacement  () . pl_PositionVector  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 209 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
vSpeed  += (vDiff  * m_fDiffMultiply ) * pen  -> en_mRotation ;
#line 211 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
((CMovableEntity  &) * pen ) . en_vCurrentTranslationAbsolute  = vSpeed ;
#line 212 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
((CMovableEntity  &) * pen ) . en_aDesiredRotationRelative  = ANGLE3D (180.0f , 0 , 0);
#line 214 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
FLOAT3D vDirection ;
#line 215 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
AnglesToDirectionVector  (GetPlacement  () . pl_OrientationAngle  , vDirection );
#line 216 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
InflictDirectDamage  (pen  , m_penOwner  , DMT_IMPACT  , 0.1f , GetPlacement  () . pl_PositionVector  , vDirection );
#line 217 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
#line 218 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
#line 219 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
BOOL CTwister::
#line 228 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CTwister_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_ETwister, "CTwister::Main expects 'ETwister' as input!");  const ETwister &et = (const ETwister &)__eeInput;
#line 230 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
ASSERT  (et  . penOwner  != NULL );
#line 231 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_penOwner  = et  . penOwner ;
#line 232 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_EtsSize  = et  . EtsSize ;
#line 235 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
InitAsModel  ();
#line 236 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetPhysicsFlags  (EPF_TWISTER );
#line 237 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetCollisionFlags  (ECF_TWISTER );
#line 238 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 239 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetModel  (MODEL_TWISTER );
#line 240 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetModelMainTexture  (TEXTURE_TWISTER );
#line 243 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
switch(m_EtsSize ){
#line 244 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
case TWS_SMALL : 
#line 245 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fActionRadius  = 10;
#line 246 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fActionTime  = 10;
#line 247 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fUpMultiply  = 5.0f;
#line 248 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fDiffMultiply  = 1.0f;
#line 249 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
break ;
#line 250 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
case TWS_BIG : 
#line 251 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fActionRadius  = 15;
#line 252 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fActionTime  = 20;
#line 253 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fUpMultiply  = 10.0f;
#line 254 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fDiffMultiply  = 4.0f;
#line 255 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
GetModelObject  () -> StretchModel  (FLOAT3D (4.0f , 4.0f , 4.0f));
#line 256 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
break ;
#line 257 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
case TWS_LARGE : 
#line 258 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fActionRadius  = 20;
#line 259 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fActionTime  = 30;
#line 260 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fUpMultiply  = 20.0f;
#line 261 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fDiffMultiply  = 16.0f;
#line 262 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
GetModelObject  () -> StretchModel  (FLOAT3D (16.0f , 16.0f , 16.0f));
#line 263 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
break ;
#line 264 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
#line 265 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
ModelChangeNotify  ();
#line 268 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_vStartPosition  = GetPlacement  () . pl_PositionVector ;
#line 271 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fStopTime  = _pTimer  -> CurrentTick  () + 10.0f;
#line 272 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
Jump(STATE_CURRENT,0x01fb0005, FALSE, EInternal());return TRUE;}BOOL CTwister::H0x01fb0005_Main_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0005
if(!(_pTimer  -> CurrentTick  () < m_fStopTime )){ Jump(STATE_CURRENT,0x01fb0006, FALSE, EInternal());return TRUE;}
#line 274 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
FLOAT fR  = FRnd  () * 10.0f;
#line 275 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
FLOAT fA  = FRnd  () * 360.0f;
#line 276 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_vDesiredPosition  = m_vStartPosition  + FLOAT3D (CosFast  (fA ) * fR  , 0 , SinFast  (fA ) * fR );
#line 277 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
Jump(STATE_CURRENT,0x01fb0003, FALSE, EInternal());return TRUE;}BOOL CTwister::H0x01fb0003_Main_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0003
if(!((m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () > MOVE_SPEED  * MOVE_FREQUENCY  * 2.0f && 
#line 278 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
_pTimer  -> CurrentTick  () < m_fStopTime )){ Jump(STATE_CURRENT,0x01fb0004, FALSE, EInternal());return TRUE;}
#line 279 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
MoveToPosition  ();
#line 280 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetTimerAfter(MOVE_FREQUENCY );
Jump(STATE_CURRENT, 0x01fb0001, FALSE, EBegin());return TRUE;}BOOL CTwister::H0x01fb0001_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0001
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01fb0002, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&ep= (EPass&)__eeInput;

#line 284 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
if(ep  . penOther  -> GetRenderType  () & RT_MODEL  && 
#line 285 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
ep  . penOther  -> GetPhysicsFlags  () & EPF_MOVABLE ){
#line 286 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SpinEntity  (ep  . penOther );
#line 287 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}
#line 288 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
return TRUE;
#line 289 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 290 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}return TRUE;}BOOL CTwister::H0x01fb0002_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0002
Jump(STATE_CURRENT,0x01fb0003, FALSE, EInternal());return TRUE;
#line 291 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}BOOL CTwister::H0x01fb0004_Main_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0004
Jump(STATE_CURRENT,0x01fb0005, FALSE, EInternal());return TRUE;
#line 292 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
}BOOL CTwister::H0x01fb0006_Main_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0006

#line 295 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fFadeStartTime  = _pTimer  -> CurrentTick  ();
#line 296 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_bFadeOut  = TRUE ;
#line 297 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
m_fFadeTime  = 2.0f;
#line 298 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
SetTimerAfter(m_fFadeTime );
Jump(STATE_CURRENT, 0x01fb0007, FALSE, EBegin());return TRUE;}BOOL CTwister::H0x01fb0007_Main_07(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0007
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01fb0008, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CTwister::H0x01fb0008_Main_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0008
;
#line 301 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
Destroy  ();
#line 303 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
Return(STATE_CURRENT,EVoid());
#line 303 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTFE/Sources/Entities/Twister.es"
return TRUE; ASSERT(FALSE); return TRUE;};