/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#ifndef _EntitiesMP_MovingBrush_INCLUDED
#define _EntitiesMP_MovingBrush_INCLUDED 1
#include <EntitiesMP/MovingBrushMarker.h>
#include <EntitiesMP/SoundHolder.h>
#include <EntitiesMP/MirrorMarker.h>
#include <EntitiesMP/Debris.h>
#define EVENTCODE_EHit 0x00650000
class DECL_DLL EHit : public CEntityEvent {
public:
EHit();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(EHit &e) { e = EHit(); } ;
#define EVENTCODE_EBrushDestroyed 0x00650001
class DECL_DLL EBrushDestroyed : public CEntityEvent {
public:
EBrushDestroyed();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(EBrushDestroyed &e) { e = EBrushDestroyed(); } ;
extern DECL_DLL CEntityPropertyEnumType BlockAction_enum;
enum BlockAction {
  BA_NONE = 0,
  BA_BOUNCE = 1,
  BA_SKIPMARKER = 2,
};
DECL_DLL inline void ClearToDefault(BlockAction &e) { e = (BlockAction)0; } ;
extern DECL_DLL CEntityPropertyEnumType TouchOrDamageEvent_enum;
enum TouchOrDamageEvent {
  TDE_TOUCHONLY = 0,
  TDE_DAMAGEONLY = 1,
  TDE_BOTH = 2,
};
DECL_DLL inline void ClearToDefault(TouchOrDamageEvent &e) { e = (TouchOrDamageEvent)0; } ;
extern "C" DECL_DLL CDLLEntityClass CMovingBrush_DLLClass;
class CMovingBrush : public CMovableBrushEntity {
public:
virtual const CTString &GetName(void) const { return m_strName; };
virtual BOOL IsTargetable(void) const { return TRUE; };
  DECL_DLL virtual void SetDefaultProperties(void);
  CTString m_strName;
  CTString m_strDescription;
  CEntityPointer m_penTarget;
  BOOL m_bAutoStart;
  FLOAT m_fSpeed;
  FLOAT m_fWaitTime;
  BOOL m_bMoveOnTouch;
  enum BlockAction m_ebaAction;
  FLOAT m_fBlockDamage;
  BOOL m_bPlayersOnly;
  BOOL m_bDynamicShadows;
  BOOL m_bVeryBigBrush;
  enum EventEType m_eetTouchEvent;
  CEntityPointer m_penTouchEvent;
  enum TouchOrDamageEvent m_tdeSendEventOnDamage;
  CEntityPointer m_penSwitch;
  enum EventEType m_eetMarkerEvent;
  CEntityPointer m_penMarkerEvent;
  FLOAT m_tmBankingRotation;
  BOOL m_bMoving;
  BOOL m_bRotating;
  BOOL m_bForceStop;
  BOOL m_bNoRotation;
  FLOAT3D m_vDesiredTranslation;
  ANGLE3D m_aDesiredRotation;
  BOOL m_bInverseRotate;
  BOOL m_bStopMoving;
  BOOL m_bMoveToMarker;
  BOOL m_bSkipMarker;
  BOOL m_bValidMarker;
  FLOAT m_fXLimitSign;
  FLOAT m_fYLimitSign;
  FLOAT m_fZLimitSign;
  ANGLE m_aHLimitSign;
  ANGLE m_aPLimitSign;
  ANGLE m_aBLimitSign;
  FLOAT3D m_vStartTranslation;
  ANGLE3D m_aStartRotation;
  FLOAT m_fCourseLength;
  ANGLE m_aHeadLenght;
  ANGLE m_aPitchLenght;
  ANGLE m_aBankLenght;
  CEntityPointer m_penSoundStart;
  CEntityPointer m_penSoundStop;
  CEntityPointer m_penSoundFollow;
  CSoundObject m_soStart;
  CSoundObject m_soStop;
  CSoundObject m_soFollow;
  CEntityPointer m_penMirror0;
  CEntityPointer m_penMirror1;
  CEntityPointer m_penMirror2;
  CEntityPointer m_penMirror3;
  CEntityPointer m_penMirror4;
  FLOAT m_fHealth;
  BOOL m_bBlowupByBull;
  enum EventEType m_eetBlowupEvent;
  CEntityPointer m_penBlowupEvent;
  BOOL m_bZoning;
  BOOL m_bMoveOnDamage;
  FLOAT m_fTouchDamage;
  COLOR m_colDebrises;
  INDEX m_ctDebrises;
  FLOAT m_fCandyEffect;
  FLOAT m_fCubeFactor;
  BOOL m_bBlowupByDamager;
  ULONG m_cbClassificationBits;
  ULONG m_vbVisibilityBits;
   
#line 159 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
ULONG GetVisTweaks(void);
   
#line 164 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void Precache(void);
   
#line 171 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void GetForce(INDEX iForce,const FLOAT3D & vPoint,
#line 172 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
CForceStrength & fsGravity,CForceStrength & fsField);
   
#line 177 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 178 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection);
   
#line 232 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void AdjustAngle(ANGLE & a);
   
#line 241 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
BOOL MovesByTargetedRoute(CTString & strTargetProperty)const;
   
#line 246 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
BOOL DropsMarker(CTFileName & fnmMarkerClass,CTString & strTargetProperty)const;
   
#line 251 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
const CTString & GetDescription(void)const;
   
#line 259 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
const CTString & GetMirrorName(INDEX iMirror);
   
#line 293 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
BOOL GetMirror(INDEX iMirror,class CMirrorParameters & mpMirror);
   
#line 315 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void PreMoving();
   
#line 405 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
BOOL LoadMarkerParameters();
   
#line 474 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
BOOL CanReactOnEntity(CEntity * pen);
   
#line 492 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void PlayStartSound(void);
   
#line 502 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void PlayStopSound(void);
   
#line 512 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void PlayFollowSound(void);
   
#line 522 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void StopFollowSound(void);
   
#line 527 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void MovingOn(void);
   
#line 537 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void MovingOff(void);
   
#line 548 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void MaybeActivateRotation(void);
   
#line 559 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void DeactivateRotation(void);
   
#line 565 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
void SetCombinedRotation(ANGLE3D aRotAngle,ANGLE3D aAddAngle);
   
#line 574 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
SLONG GetUsedMemory(void);
#define  STATE_CMovingBrush_MoveToMarker 0x00650002
  BOOL 
#line 590 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
MoveToMarker(const CEntityEvent &__eeInput);
  BOOL H0x00650003_MoveToMarker_01(const CEntityEvent &__eeInput);
  BOOL H0x00650004_MoveToMarker_02(const CEntityEvent &__eeInput);
#define  STATE_CMovingBrush_BounceObstructed 0x00650005
  BOOL 
#line 674 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
BounceObstructed(const CEntityEvent &__eeInput);
  BOOL H0x00650006_BounceObstructed_01(const CEntityEvent &__eeInput);
  BOOL H0x00650007_BounceObstructed_02(const CEntityEvent &__eeInput);
#define  STATE_CMovingBrush_MoveBrush 0x00650008
  BOOL 
#line 723 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
MoveBrush(const CEntityEvent &__eeInput);
  BOOL H0x00650009_MoveBrush_01(const CEntityEvent &__eeInput);
  BOOL H0x0065000a_MoveBrush_02(const CEntityEvent &__eeInput);
  BOOL H0x0065000b_MoveBrush_03(const CEntityEvent &__eeInput);
  BOOL H0x0065000c_MoveBrush_04(const CEntityEvent &__eeInput);
  BOOL H0x0065000d_MoveBrush_05(const CEntityEvent &__eeInput);
  BOOL H0x0065000e_MoveBrush_06(const CEntityEvent &__eeInput);
  BOOL H0x0065000f_MoveBrush_07(const CEntityEvent &__eeInput);
  BOOL H0x00650010_MoveBrush_08(const CEntityEvent &__eeInput);
  BOOL H0x00650011_MoveBrush_09(const CEntityEvent &__eeInput);
  BOOL H0x00650012_MoveBrush_10(const CEntityEvent &__eeInput);
#define  STATE_CMovingBrush_TeleportToStopMarker 0x00650013
  BOOL 
#line 797 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
TeleportToStopMarker(const CEntityEvent &__eeInput);
#define  STATE_CMovingBrush_Main 1
  BOOL 
#line 826 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/MovingBrush.es"
Main(const CEntityEvent &__eeInput);
  BOOL H0x00650014_Main_01(const CEntityEvent &__eeInput);
  BOOL H0x00650015_Main_02(const CEntityEvent &__eeInput);
  BOOL H0x00650016_Main_03(const CEntityEvent &__eeInput);
  BOOL H0x00650017_Main_04(const CEntityEvent &__eeInput);
};
#endif // _EntitiesMP_MovingBrush_INCLUDED
