/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 17 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"

#include "EntitiesMP/StdH/StdH.h"
#include "ModelsMP/Enemies/AirElemental/Twister.h"

#define ECF_TWISTER ( \
  ((ECBI_BRUSH|ECBI_MODEL|ECBI_CORPSE|ECBI_ITEM|ECBI_PROJECTILE_MAGIC|ECBI_PROJECTILE_SOLID)<<ECB_TEST) |\
  ((ECBI_MODEL|ECBI_CORPSE|ECBI_ITEM|ECBI_PROJECTILE_MAGIC|ECBI_PROJECTILE_SOLID)<<ECB_PASS) |\
  ((ECBI_MODEL)<<ECB_IS))
#define EPF_TWISTER ( \
  EPF_ONBLOCK_CLIMBORSLIDE|EPF_ORIENTEDBYGRAVITY|\
  EPF_TRANSLATEDBYGRAVITY|EPF_MOVABLE|EPF_ABSOLUTETRANSLATE)

#include <EntitiesMP/Twister.h>
#include <EntitiesMP/Twister_tables.h>
CEntityEvent *ETwister::MakeCopy(void) { CEntityEvent *peeCopy = new ETwister(*this); return peeCopy;}
ETwister::ETwister() : CEntityEvent(EVENTCODE_ETwister) {;
 ClearToDefault(penOwner);
 ClearToDefault(fSize);
 ClearToDefault(fDuration);
 ClearToDefault(sgnSpinDir);
 ClearToDefault(bGrow);
 ClearToDefault(bMovingAllowed);
};
#line 47 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"

static EntityInfo eiTwister = {
  EIBT_AIR, 0.0f,
  0.0f, 1.0f, 0.0f,
  0.0f, 0.75f, 0.0f,
};


#define MOVE_FREQUENCY 0.1f
#define ROTATE_SPEED 10000.0f
#define MOVE_SPEED 7.5f

void CTwister_OnPrecache(CDLLEntityClass *pdec, INDEX iUser) 
{
  pdec->PrecacheClass(CLASS_SPINNER);
  pdec->PrecacheModel(MODEL_TWISTER);
  pdec->PrecacheTexture(TEXTURE_TWISTER);
  pdec->PrecacheSound(SOUND_SPIN);
}

void CTwister::SetDefaultProperties(void) {
  m_penOwner = NULL;
  m_fSize = 1.0f;
  m_vSpeed = FLOAT3D(0 , 0 , 0);
  m_sgnSpinDir = 1;
  m_bGrow = TRUE ;
  m_tmLastMove = 0.0f;
  m_aSpeedRotation = FLOAT3D(0 , 0 , 0);
  m_bMoving = FALSE ;
  m_bMovingAllowed = TRUE ;
  m_vDesiredPosition = FLOAT3D(0 , 0 , 0);
  m_vDesiredAngle = FLOAT3D(0 , 0 , 0);
  m_fStopTime = 0.0f;
  m_fActionRadius = 0.0f;
  m_fActionTime = 0.0f;
  m_fDiffMultiply = 0.0f;
  m_fUpMultiply = 0.0f;
  m_bFadeOut = FALSE ;
  m_fFadeStartTime = 1e6;
  m_fFadeTime = 2.0f;
  m_fStartTime = 0.0f;
  m_soSpin.SetOwner(this);
m_soSpin.Stop_internal();
  CMovableModelEntity::SetDefaultProperties();
}
  
#line 110 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
void * CTwister::GetEntityInfo(void) {
#line 111 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
return & eiTwister ;
#line 112 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
  
#line 115 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
void CTwister::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 116 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 117 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
{
#line 118 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
return ;
#line 119 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
  
#line 122 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
void CTwister::RenderParticles(void) 
#line 123 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
{
#line 124 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(m_bMovingAllowed )
#line 125 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
{
#line 126 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
Particles_Twister  (this  , m_fSize  / 15.0f , m_fStartTime  , m_fFadeStartTime  , 1.0f);
#line 127 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 128 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
else 
#line 129 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
{
#line 130 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
CEntity  * penParent  = GetParent  ();
#line 131 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
FLOAT fStretch  = 1.0f;
#line 132 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(penParent  != NULL )
#line 133 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
{
#line 134 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
CAirElemental  * penAir  = (CAirElemental  *) penParent ;
#line 135 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
FLOAT fStretchRatio  = penAir  -> GetCurrentStretchRatio  ();
#line 136 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
fStretch  = 1.0f + (fStretchRatio ) * 6.0f;
#line 137 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 138 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
Particles_Twister  (this  , m_fSize  / 15.0f * fStretch  , m_fStartTime  , m_fFadeStartTime  , 0.5f * fStretch );
#line 139 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 140 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
  
#line 145 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
BOOL CTwister::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) {
#line 147 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(m_bFadeOut ){
#line 148 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
FLOAT fTimeRemain  = m_fFadeStartTime  + m_fFadeTime  - _pTimer  -> CurrentTick  ();
#line 149 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(fTimeRemain  < 0.0f){fTimeRemain  = 0.0f;}
#line 150 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
COLOR colAlpha  = GetModelObject  () -> mo_colBlendColor ;
#line 151 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
colAlpha  = (colAlpha  & 0xffffff00) + (COLOR (fTimeRemain  / m_fFadeTime  * 0xff) & 0xff);
#line 152 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
GetModelObject  () -> mo_colBlendColor  = colAlpha ;
#line 153 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 154 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
return CMovableModelEntity  :: AdjustShadingParameters  (vLightDirection  , colLight  , colAmbient );
#line 155 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
  
#line 162 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
void CTwister::SpinEntity(CEntity * pen) {
#line 165 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(IsOfClass  (pen  , "AirElemental") || IsOfClass  (pen  , "Twister") 
#line 166 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
|| IsDerivedFromClass  (pen  , "Item")){
#line 167 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
return ;
#line 168 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 170 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(IsOfClass  (pen  , "Projectile")){
#line 171 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(((CProjectile  *) & * pen ) -> m_prtType  == PRT_AIRELEMENTAL_WIND )
#line 172 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
{
#line 173 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
return ;
#line 174 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 175 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 179 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(pen  -> GetPhysicsFlags  () & EPF_MOVABLE ){
#line 181 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
BOOL bNoSpinner  = TRUE ;
#line 182 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
{FOREACHINLIST  (CEntity  , en_lnInParent  , pen  -> en_lhChildren  , iten ){
#line 183 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(IsOfClass  (iten  , "Spinner"))
#line 184 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
{
#line 185 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
bNoSpinner  = FALSE ;
#line 186 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
return ;
#line 187 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 188 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}}
#line 189 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(bNoSpinner ){
#line 190 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
ESpinnerInit  esi ;
#line 191 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
CEntityPointer penSpinner ;
#line 192 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . penParent  = pen ;
#line 193 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . penTwister  = this ;
#line 194 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . bImpulse  = FALSE ;
#line 197 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(IsOfClass  (pen  , "Projectile"))
#line 198 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
{
#line 199 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
switch(((CProjectile  &) * pen ) . m_prtType ){
#line 200 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
case PRT_GRENADE : 
#line 201 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
case PRT_HEADMAN_BOMBERMAN : 
#line 202 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
case PRT_DEMON_FIREBALL : 
#line 203 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
case PRT_SHOOTER_FIREBALL : 
#line 204 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
case PRT_BEAST_PROJECTILE : 
#line 205 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
case PRT_BEAST_BIG_PROJECTILE : 
#line 206 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
case PRT_LAVA_COMET : 
#line 207 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . tmSpinTime  = 2.5f;
#line 208 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . vRotationAngle  = ANGLE3D (- m_sgnSpinDir  * 250.0f , 0 , 0);
#line 209 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . fUpSpeed  = m_fDiffMultiply  * 0.75;
#line 210 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
break ;
#line 211 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
default  : 
#line 212 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . tmSpinTime  = 1.5f;
#line 213 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . vRotationAngle  = ANGLE3D (- m_sgnSpinDir  * 180.0f , 0 , 0);
#line 214 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . fUpSpeed  = m_fDiffMultiply  / 5.0f;
#line 215 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
break ;
#line 216 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 218 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}else if(IsOfClass  (pen  , "Cannon ball")){
#line 219 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . tmSpinTime  = 0.2f;
#line 220 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . vRotationAngle  = ANGLE3D (- m_sgnSpinDir  * 500.0f , 0 , 0);
#line 221 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . fUpSpeed  = m_fDiffMultiply  * 3.0f;
#line 223 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}else if(IsOfClass  (pen  , "Player")){
#line 224 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . tmSpinTime  = 3.0f;
#line 225 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . vRotationAngle  = ANGLE3D (- m_sgnSpinDir  * 220.0f , 0 , 0);
#line 226 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . bImpulse  = TRUE ;
#line 227 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . fUpSpeed  = m_fDiffMultiply  * (0.4f + FRnd  () * 0.4f);
#line 228 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . tmImpulseDuration  = 1.4f + FRnd  () * 0.5f;
#line 230 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}else {
#line 231 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . tmSpinTime  = 0.5f;
#line 232 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . vRotationAngle  = ANGLE3D (- m_sgnSpinDir  * 180.0f , 0 , 0);
#line 233 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
esi  . fUpSpeed  = m_fDiffMultiply ;
#line 234 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 235 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
penSpinner  = CreateEntity  (pen  -> GetPlacement  () , CLASS_SPINNER );
#line 236 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
penSpinner  -> Initialize  (esi );
#line 237 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
penSpinner  -> SetParent  (pen );
#line 238 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 240 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
FLOAT3D vDirection ;
#line 241 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
AnglesToDirectionVector  (GetPlacement  () . pl_OrientationAngle  , vDirection );
#line 242 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
InflictDirectDamage  (pen  , m_penOwner  , DMT_IMPACT  , 2.0f , GetPlacement  () . pl_PositionVector  , vDirection );
#line 243 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 245 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
  
#line 247 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
void CTwister::PreMoving(void) {
#line 249 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(m_bMoving ){
#line 250 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
FLOATmatrix3D m ;
#line 251 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
ANGLE3D aRotation ;
#line 252 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
aRotation  = m_aSpeedRotation  * (_pTimer  -> CurrentTick  () - m_tmLastMove );
#line 253 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
MakeRotationMatrix  (m  , aRotation );
#line 254 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_vSpeed  = m_vSpeed  * m ;
#line 255 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetDesiredTranslation  (m_vSpeed );
#line 256 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_tmLastMove  = _pTimer  -> CurrentTick  ();
#line 257 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 258 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
CMovableModelEntity  :: PreMoving  ();
#line 259 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
BOOL CTwister::
#line 267 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CTwister_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_ETwister, "CTwister::Main expects 'ETwister' as input!");  const ETwister &et = (const ETwister &)__eeInput;
#line 269 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
ASSERT  (et  . penOwner  != NULL );
#line 270 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_penOwner  = et  . penOwner ;
#line 271 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_sgnSpinDir  = et  . sgnSpinDir ;
#line 272 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(m_sgnSpinDir  == 0){m_sgnSpinDir  = 1;};
#line 273 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_fSize  = et  . fSize ;
#line 274 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_fStopTime  = _pTimer  -> CurrentTick  () + et  . fDuration ;
#line 275 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_bGrow  = et  . bGrow ;
#line 276 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_bMovingAllowed  = et  . bMovingAllowed ;
#line 279 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
InitAsEditorModel  ();
#line 280 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetPhysicsFlags  (EPF_TWISTER );
#line 281 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetCollisionFlags  (ECF_TWISTER );
#line 282 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 283 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetModel  (MODEL_TWISTER );
#line 284 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetModelMainTexture  (TEXTURE_TWISTER );
#line 287 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_fActionRadius  = pow  (m_fSize  , 0.33333f) * 10.0f;
#line 288 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_fActionTime  = m_fActionRadius ;
#line 289 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_fUpMultiply  = m_fActionRadius  / 2.0f;
#line 290 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_fDiffMultiply  = sqrt  (m_fSize );
#line 291 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
GetModelObject  () -> StretchModel  (FLOAT3D (m_fSize  , m_fSize  , m_fSize ));
#line 292 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
ModelChangeNotify  ();
#line 294 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_fStartTime  = _pTimer  -> CurrentTick  ();
#line 297 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetTimerAfter(FRnd  () * 0.25f);
Jump(STATE_CURRENT, 0x01fb0001, FALSE, EBegin());return TRUE;}BOOL CTwister::H0x01fb0001_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0001
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01fb0002, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CTwister::H0x01fb0002_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0002
;
#line 299 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_soSpin  . Set3DParameters  (50.0f , 10.0f , 1.0f , 1.0f);
#line 300 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
PlaySound  (m_soSpin  , SOUND_SPIN  , SOF_3D  | SOF_LOOP );
#line 303 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetDesiredRotation  (ANGLE3D (m_sgnSpinDir  * (FRnd  () * 50.0f + 50.0f) , 0.0f , 0.0f));
#line 305 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(m_bGrow ){
#line 306 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
StartModelAnim  (TWISTER_ANIM_GROWING  , AOF_SMOOTHCHANGE  | AOF_NORESTART );
#line 307 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 308 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetTimerAfter(GetModelObject  () -> GetAnimLength  (TWISTER_ANIM_GROWING ));
Jump(STATE_CURRENT, 0x01fb0003, FALSE, EBegin());return TRUE;}BOOL CTwister::H0x01fb0003_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0003
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01fb0004, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CTwister::H0x01fb0004_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0004
;
#line 311 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
FLOAT fR  = FRndIn  (5.0f , 10.0f);
#line 312 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
FLOAT fA  = FRnd  () * 360.0f;
#line 313 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_vSpeed  = FLOAT3D (CosFast  (fA ) * fR  , 0 , SinFast  (fA ) * fR );
#line 314 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_bMoving  = m_bMovingAllowed ;
#line 317 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
Jump(STATE_CURRENT,0x01fb0007, FALSE, EInternal());return TRUE;}BOOL CTwister::H0x01fb0007_Main_07(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0007
if(!(_pTimer  -> CurrentTick  () < m_fStopTime )){ Jump(STATE_CURRENT,0x01fb0008, FALSE, EInternal());return TRUE;}
#line 318 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
FLOAT fMoveTime  = FRndIn  (2.0f , 4.0f);
#line 319 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_aSpeedRotation  = FLOAT3D (FRndIn  (8.0f , 16.0f) , 0.0f , 0.0f);
#line 320 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_tmLastMove  = _pTimer  -> CurrentTick  ();
#line 323 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetTimerAfter(fMoveTime );
Jump(STATE_CURRENT, 0x01fb0005, FALSE, EBegin());return TRUE;}BOOL CTwister::H0x01fb0005_Main_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0005
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01fb0006, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&ep= (EPass&)__eeInput;

#line 327 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
if(ep  . penOther  -> GetRenderType  () & RT_MODEL  && 
#line 328 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
ep  . penOther  -> GetPhysicsFlags  () & EPF_MOVABLE  && 
#line 329 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
! IsOfClass  (ep  . penOther  , "Twister")){
#line 330 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SpinEntity  (ep  . penOther );
#line 331 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}
#line 332 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
return TRUE;
#line 333 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 334 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}return TRUE;}BOOL CTwister::H0x01fb0006_Main_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0006
Jump(STATE_CURRENT,0x01fb0007, FALSE, EInternal());return TRUE;
#line 335 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
}BOOL CTwister::H0x01fb0008_Main_08(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0008

#line 338 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_fFadeStartTime  = _pTimer  -> CurrentTick  ();
#line 339 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_bFadeOut  = TRUE ;
#line 340 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
m_fFadeTime  = 2.0f;
#line 341 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
SetTimerAfter(m_fFadeTime );
Jump(STATE_CURRENT, 0x01fb0009, FALSE, EBegin());return TRUE;}BOOL CTwister::H0x01fb0009_Main_09(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0009
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01fb000a, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CTwister::H0x01fb000a_Main_10(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb000a
;
#line 344 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
Destroy  ();
#line 346 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
Return(STATE_CURRENT,EVoid());
#line 346 "/data/data/com.termux/files/home/doom3/SeriousSamClassic-1.10.7/SamTSE/Sources/EntitiesMP/Twister.es"
return TRUE; ASSERT(FALSE); return TRUE;};